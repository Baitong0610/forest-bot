const express = require('express');
const line = require('@line/bot-sdk');
const cors = require('cors');
const bodyParser = require('body-parser');
const { google } = require('googleapis'); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Google Sheets

const app = express();
app.use(cors());
app.use(bodyParser.json()); // ‡πÉ‡∏ä‡πâ body-parser ‡∏£‡∏ß‡∏°

// --- LINE Bot Config ---
const config = {
  channelAccessToken: process.env.CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.CHANNEL_SECRET
};

const client = new line.Client(config);

// --- Google Sheets Setup ---
const credentials = JSON.parse(Buffer.from(process.env.GOOGLE_SERVICE_ACCOUNT_JSON, 'base64').toString('utf8'));
const auth = new google.auth.GoogleAuth({
  credentials: credentials,
  scopes: ['https://www.googleapis.com/auth/spreadsheets'],
});
const sheets = google.sheets({ version: 'v4', auth });

// Spreadsheet ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ)
const SPREADSHEET_ID = '1XE07lRz6ZsXa6TELNH61I9pwsGXWfgmso3_2HxSFP60/edit?gid=0#gid=0'; // <-- ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà ID Spreadsheet ‡∏à‡∏£‡∏¥‡∏á‡πÜ

// --- Routes ---

// ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
app.get('/', (req, res) => {
  console.log("‚úÖ GET / hit!");
  res.send('üå≥ Forest Bot is running!');
});

// Webhook ‡∏à‡∏≤‡∏Å LINE
app.post('/webhook', line.middleware(config), async (req, res) => {
  try {
    await Promise.all(req.body.events.map(handleEvent));
    res.status(200).end();
  } catch (err) {
    console.error("‚ùå Error in /webhook:", err);
    res.status(500).end();
  }
});

// ‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á
app.post('/reserve', async (req, res) => {
  const { userId, seatNumber, groupId } = req.body;

  if (!userId || !seatNumber || !groupId) {
    return res.status(400).json({ message: '‚ùå Missing userId, seatNumber, or groupId' });
  }

  console.log(`üìå Group ${groupId}: User ${userId} ‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç ${seatNumber}`);

  try {
    const timestamp = new Date().toISOString();

    await sheets.spreadsheets.values.append({
      spreadsheetId: SPREADSHEET_ID,
      range: 'Reservations!A1', // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ä‡∏µ‡∏ó‡∏ä‡∏∑‡πà‡∏≠ Reservations
      valueInputOption: 'USER_ENTERED',
      requestBody: {
        values: [
          [timestamp, groupId, userId, seatNumber],
        ],
      },
    });

    res.json({ message: `‚úÖ ‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á ${seatNumber} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° ${groupId}` });
  } catch (error) {
    console.error("‚ùå Error writing to Google Sheets:", error);
    res.status(500).json({ message: '‚ùå Failed to save reservation' });
  }
});

// --- Event Handler ---
let lastWelcomeSentAt = 0;
const WELCOME_INTERVAL_MS = 5 * 1000;

async function handleEvent(event) {
  if (!event.replyToken) return;

  // ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà
  if (event.type === 'memberJoined') {
    const now = Date.now();
    if (now - lastWelcomeSentAt < WELCOME_INTERVAL_MS) return;
    lastWelcomeSentAt = now;

    const welcomeMessages = [
      {
        type: 'text',
        text: `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Æ‡∏∞ ‡∏û‡∏µ‡πà‡πÜ ‡∏ô‡∏±‡∏Å‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤\n‡∏ú‡∏°‡∏ä‡∏∑‡πà‡∏≠ Forest ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Rest ‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Æ‡∏∞ ‡∏ú‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏ó‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏û‡∏à‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‚ù§Ô∏è`
      },
      {
        type: 'text',
        text: `üìå ‡∏û‡∏µ‡πà‡πÜ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏™‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡πâ‡∏≤ ‡∏ó‡∏µ‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ üëá\nhttps://forms.gle/gXcRn9nyWiSxEp8E7\n‡πÄ‡∏£‡∏™‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡∏ó‡∏≥‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞ Take Care ‡∏û‡∏µ‡πà‡πÜ üíö`
      },
      {
        type: 'image',
        originalContentUrl: 'https://i.imgur.com/g8mt5OP.jpeg',
        previewImageUrl: 'https://i.imgur.com/g8mt5OP.jpeg'
      }
    ];

    return client.replyMessage(event.replyToken, welcomeMessages);
  }

  // ‡∏ï‡∏≠‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
  if (event.type === 'message' && event.message.type === 'text') {
    const msg = event.message.text.toLowerCase();

    if (msg.includes('‡πÄ‡∏£‡∏™‡∏°‡∏≤‡∏•‡∏≤‡∏û‡∏µ‡πà‡πÜ')) {
      const byeMessages = [
        {
          type: 'text',
          text: `‡πÄ‡∏£‡∏™‡∏°‡∏≤‡∏•‡∏≤‡∏û‡∏µ‡πà‡πÜ \n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‚ù§Ô∏è‡∏û‡∏µ‡πà‡πÜ‡∏ó‡∏∏‡∏Å‡∏ó‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏à‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô Journey with friends\n‡πÉ‡∏´‡πâ‡∏û‡∏µ‡πà‡∏™‡∏ï‡∏≤‡∏ü‡πÑ‡∏î‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ‡∏Æ‡∏∞\n\n‡πÄ‡∏£‡∏™‡∏Ç‡∏≠‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏û‡∏µ‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Æ‡∏∞ ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ üëá\nhttps://forms.gle/dxqYAu2Mg5VSjyLL8`
        },
        {
          type: 'text',
          text: `‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ù‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏£‡∏¥‡∏õ‡∏™‡∏ô‡∏∏‡∏Å‡πÜ‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ö‡∏öüôè\n\nFacebook\nhttps://www.facebook.com/share/18yHSFRJqu/\nTiktok\nhttps://www.tiktok.com/@withfriends81?_t=ZS-8tfHqKHDF8y&_r=1\nInstagram\nhttps://www.instagram.com/journeywithfriends.official?igsh=OW94bDk4bjJicm1h\nOpenChat\nhttps://line.me/ti/g2/rXXHCjIASRf_-NG86jcF7vdWUKid1ggcGiufqQ?utm_source=invitation&utm_medium=link_copy&utm_campaign=default`
        }
      ];
      return client.replyMessage(event.replyToken, byeMessages);
    }

    // ‚úÖ ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á"
    if (msg.includes('‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á')) {
      const groupId = event.source.groupId || 'unknown';
      return client.replyMessage(event.replyToken, {
        type: 'text',
        text: `üìå ‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏•‡∏¢‡∏Æ‡∏∞ üëá\nhttps://baitong0610.github.io/forest-bot/?groupId=${groupId}`
      });
    }
  }
}

// --- Start Server ---
const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log(`üå≥ Forest bot running on port ${port}`);
});
