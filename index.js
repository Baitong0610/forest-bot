const express = require('express');
const line = require('@line/bot-sdk');

// üõ†Ô∏è LINE Bot config
const config = {
  channelAccessToken: process.env.CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.CHANNEL_SECRET
};

const app = express();
const client = new line.Client(config);

// ‚úÖ Middleware
app.use(express.urlencoded({ extended: true }));
app.use(express.json());

// ‚úÖ Test route
app.get('/', (req, res) => {
  res.send('OK');
});

// ‚úÖ Memory-based booking store (‡∏à‡∏≥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏≤‡∏¢)
const bookedSeats = {};

// ‚úÖ Seat reservation route
app.post('/reserve', (req, res) => {
  const { seat, name, groupId } = req.body;

  if (!seat || !name) {
    return res.status(400).json({ status: "error", message: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö" });
  }

  if (bookedSeats[seat]) {
    return res.json({ status: "error", message: `‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á ${seat} ‡∏ñ‡∏π‡∏Å‡∏à‡∏≠‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß` });
  }

  bookedSeats[seat] = { name, groupId };
  return res.json({ status: "success", message: `‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á ${seat} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à` });
});

// ‚úÖ LINE Webhook
let lastWelcomeSentAt = 0;
const WELCOME_INTERVAL_MS = 5 * 1000;

app.post('/webhook', line.middleware(config), async (req, res) => {
  try {
    await Promise.all(req.body.events.map(handleEvent));
    res.status(200).end();
  } catch (err) {
    console.error(err);
    res.status(500).end();
  }
});

async function handleEvent(event) {
  if (!event.replyToken) return Promise.resolve(null);

  // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà
  if (event.type === 'memberJoined') {
    const now = Date.now();
    if (now - lastWelcomeSentAt < WELCOME_INTERVAL_MS) {
      return;
    }
    lastWelcomeSentAt = now;

    const welcomeMessages = [
      {
        type: 'text',
        text: `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Æ‡∏∞ ‡∏û‡∏µ‡πà‡πÜ ‡∏ô‡∏±‡∏Å‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤\n‡∏ú‡∏°‡∏ä‡∏∑‡πà‡∏≠ Forest ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Rest ‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Æ‡∏∞ ‡∏ú‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏ó‡∏ô‡∏Ç‡∏≠‡∏á ‡πÄ‡∏û‡∏à‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‚ù§Ô∏è`
      },
      {
        type: 'text',
        text: `üìå ‡∏û‡∏µ‡πà‡πÜ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏™‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡πâ‡∏≤ ‡∏ó‡∏µ‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ üëá\nhttps://forms.gle/gXcRn9nyWiSxEp8E7`
      },
      {
        type: 'image',
        originalContentUrl: 'https://i.imgur.com/g8mt5OP.jpeg',
        previewImageUrl: 'https://i.imgur.com/g8mt5OP.jpeg'
      }
    ];

    return client.replyMessage(event.replyToken, welcomeMessages);
  }

  // ‚úÖ ‡∏ï‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
  if (event.type === 'message' && event.message.type === 'text') {
    const msg = event.message.text.toLowerCase();

    if (msg.includes('‡πÄ‡∏£‡∏™‡∏°‡∏≤‡∏•‡∏≤‡∏û‡∏µ‡πà‡πÜ')) {
      const reply = [
        {
          type: 'text',
          text: `‡πÄ‡∏£‡∏™‡∏°‡∏≤‡∏•‡∏≤‡∏û‡∏µ‡πà‡πÜ \n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‚ù§Ô∏è‡∏û‡∏µ‡πà‡πÜ‡∏ó‡∏∏‡∏Å‡∏ó‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏à‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô Journey with friends`
        },
        {
          type: 'text',
          text: `‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ù‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏£‡∏¥‡∏õ‡∏™‡∏ô‡∏∏‡∏Å‡πÜ‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ö‡∏ö üôè\nFacebook: https://www.facebook.com/share/18yHSFRJqu/\nTiktok: https://www.tiktok.com/@withfriends81\nIG: https://www.instagram.com/journeywithfriends.official`
        }
      ];
      return client.replyMessage(event.replyToken, reply);
    }
  }

  return Promise.resolve(null);
}

// ‚úÖ Start server
const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log(`LINE bot + seat reservation running on port ${port}`);
});
